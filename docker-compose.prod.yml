version: '3'
services:

  web:
    container_name: web
    build:
      context: ./
      dockerfile: Dockerfile.prod # "Dockerfile"이 아니라 뒤에 prod가 붙기 때문에 명시적으로 작성
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 # 실제 서버에서는 gunicorn으로 웹서버와 장고를 연결해준다
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.prod # prod.py > .env 파일에 있는 값들을 환경변수로 설정
    env_file:
      - .env # .github/workflows/deploy.yml에서 만든 env 파일에 의존
    expose:
      - 8000
    entrypoint:
      - sh
      - entrypoint.prod.sh

  nginx:
    container_name: nginx
    build: ./nginx/ # 이 폴더 안에도 Dockerfile이 있고 이 도커파일에서 설정파일인 nginx.conf 파일로 연결시켜준다
    ports: # 웹 서버 포트 80
      - "80:80"
    depends_on: # web 컨테이너로 연결
      - web

  db:
    container_name: db
    image: keinos/sqlite3
    restart: always
    environment:
      - SQLITE3_DB=db.dstagram
    volumes: # 파일 시스템 정의
      - ./data/db:/root/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

volumes:
  static:
  media: